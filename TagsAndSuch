Note: This actual code won't work. I'm just trying to remember different useful functions and their place in the doc.

<html>

// This creates the canvas which the game will be drawn in
<canvas id="gameCanvas" width="800" height="600"></canvas>

<script>
// Used for displaying an image using code in window.onload
var carPic = document.createElement("img");
var carPicLoaded = false;

// Global variables are at the top
var canvas;
var canvasContext;
var ballX = 50;
etc...

function calculateMousePos(evt) {
	// This gets the bounding box of the canvas, so it knows it can't go beyond that
	var rect = canvas.getBoundingClientRect();
	// Not sure what this does
	var root = document.documentElement;
	// Sets x and y independent of wherever the window is or how it's scrolled...or something. lol Uses rect and root that were just defined.
	var mouseX = evt.clientX - rect.left - root.scrollLeft;
	var mouseY = evt.clientY - rect.top - root.scrollTop;
	return {
		x: mouseX,
		y:mouseY
	};
}

// This keeps the things inside the function from running until the window loads in.
window.onload = function() { 

  //A variable to make accessing the game canvas easier
  canvas = document.getElementById('gameCanvas');
  
  //Not quite sure what this does, but I bet it allows the user to use those shape drawing functions below
  canvasContext = canvas.getContext('2d');
  
  var framesPerSecond = 30;
  
  //Creates a function inside setInterval that moves and draws everything in an interval of 1000 milliseconds, which is one second, divided by 30, which gives you the right speed for animation
  //You could also create another function with moveEverything and draw Everything in it and write it as setInterval(callBothFunction, 1000/framesPerSecond); The above is just an inline way to do it where you're not writing another function.
  setInterval(function() {
  	moveEverything();
	drawEverything();
  }, 1000/framesPerSecond);
  
  // On every mouse move, the following function is triggered.
    canvas.addEventListener('mousemove',
	function(evt) {
		var mousePos = calculateMousePos(evt);
		paddle1Y = mousePos.y -(PADDLE_HEIGHT/2);
	});
 }
	// When the pic loads, sets variable to true so you know it's loaded and then sets the source to the image name in the same folder
	carPic.onload = function() {
		carPicLoaded = true;
	}
	carPic.src = "player1car.png";
  
 }
 
 function moveEverything() {
 	ballX = ballX + 5;
 }
 
 function drawEverything() {
	//The style is set before the Rect is drawn.
	canvasContext.fillStyle = 'black';
	//fillRect will respond to whatever style is immediately above it
	//The first 0 is the x coordinate, the second the y, then how wide and how tall the item is. Numbers expand left to right and top to bottom
	canvasContext.fillRect(0,0,canvas.width, canvas.height);
	canvasContext.fillStyle = 'red';
	canvasContext.fillRect(ballX,100,10,10);
 }
 
 // Something to do with rotation. Not sure.
 function drawBitmapCenteredWithRotation(useBitmap, atX, atY, withAng) {
	canvasContext.save();
	canvasContext.translate(atX, atY);
	canvasContext.rotate(withAng);
	canvasContext.drawImage(useBitmap, -useBitmap.width/2, -useBitmap.height/2);
	canvasContext.restore(); 
 
// Uses sine and cosine to find car location when you have the speed and car angle
function carMove() {
	carX += Math.cos(carAng) * carSpeed;
	carY += Math.sin(carAng) * carSpeed;

</script>

</html>
